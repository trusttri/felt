/* still a work in progress */
:root {
	/* TODO support dark mode */
	/* color-scheme: light dark; */
	font-size: 62.5%;

	--faded_1: 81%;
	--faded_2: 62%;
	--faded_3: 38%;
	--faded_4: 24%;
	--faded_5: 15%;
	--faded_6: 9%;
	--bg: #fff;
	--shadow: rgba(0, 0, 0, var(--faded_5));
	--overlay_bg: hsla(0, 0%, 0%, var(--faded_2));
	--blue_hue: 210;
	--blue_saturation: 55%;
	--blue_lightness: 50%;
	--blue: hsl(var(--blue_hue), var(--blue_saturation), var(--blue_lightness));
	--green_hue: 120;
	--green_saturation: 55%;
	--green_lightness: 32%;
	--green: hsl(var(--green_hue), var(--green_saturation), var(--green_lightness));
	--violet_hue: 260;
	--violet_saturation: 50%;
	--violet_lightness: 50%;
	--violet: hsl(var(--violet_hue), var(--violet_saturation), var(--violet_lightness));
	--pink_hue: 335;
	--pink_saturation: 74%;
	--pink_lightness: 71%;
	--pink: hsl(var(--pink_hue), var(--pink_saturation), var(--pink_lightness));
	--brown_hue: 32;
	--brown_saturation: 100%;
	--brown_lightness: 22%;
	--brown: hsl(var(--brown_hue), var(--brown_saturation), var(--brown_lightness));
	--orange_hue: 24;
	--orange_saturation: 55%;
	--orange_lightness: 50%;
	--orange: hsl(var(--orange_hue), var(--orange_saturation), var(--orange_lightness));
	--red_hue: 0; /* TODO this is too "red", but not sure which direction to go */
	--red_saturation: 50%;
	--red_lightness: 50%;
	--red: hsl(var(--red_hue), var(--red_saturation), var(--red_lightness));
	--tint_hue: var(--orange_hue);
	--tint_saturation: 11%;
	--tint_lightness_1: 80%;
	--tint_lightness_2: 87%;
	--tint_lightness_3: 90%;
	--tint_lightness_4: 94%;
	--tint_lightness_5: 100%;
	--tint_lightness: var(--tint_lightness_1);
	--tint_lightness_dark: 45%;
	--tint_alpha: 1;
	--tint: hsla(var(--tint_hue), var(--tint_saturation), var(--tint_lightness), var(--tint_alpha));
	--tint_overlay: hsla(
		var(--tint_hue),
		var(--tint_saturation),
		var(--tint_lightness_1),
		var(--faded_1)
	);
	--tint_highlight: hsla(
		var(--tint_hue),
		var(--tint_saturation),
		var(--tint_lightness_3),
		var(--faded_2)
	);
	--interactive_color: hsl(var(--tint_hue), var(--tint_saturation), var(--tint_lightness_3));
	--interactive_color_dark: hsl(var(--tint_hue), var(--tint_saturation), var(--tint_lightness_2));
	--interactive_color_darker: hsl(var(--tint_hue), var(--tint_saturation), var(--tint_lightness_1));
	--interactive_color_light: hsl(var(--tint_hue), var(--tint_saturation), var(--tint_lightness_4));
	--interactive_color_lighter: hsl(
		var(--tint_hue),
		var(--tint_saturation),
		var(--tint_lightness_5)
	);
	--interactive_color_hover: hsl(var(--tint_hue), var(--tint_saturation), var(--tint_lightness_4));
	--interactive_color_disabled: hsl(
		var(--tint_hue),
		var(--tint_saturation),
		var(--tint_lightness_4)
	);
	--interactive_color_active: var(--interactive_color_lighter);
	--interactive_color_active_dark: var(--interactive_color_dark);
	--active_hue: var(--blue_hue);
	--active_saturation: var(--blue_saturation);
	--active_lightness: var(--blue_lightness);
	--active_color: hsl(var(--active_hue), var(--active_saturation), var(--active_lightness));
	--active_saturation_bg_light: 70%;
	--active_lightness_bg_light: 80%;
	--active_alpha_bg_light: 0.5;
	--active_color_bg_light: hsla(
		var(--active_hue),
		var(--active_saturation_bg_light),
		var(--active_lightness_bg_light),
		var(--active_alpha_bg_light)
	);
	--active_color_2: var(--green);
	--help_color: var(--green);
	--error_color: var(--red);
	/* text colors don't use alpha because it affects performance */
	--text_color: hsl(0, 10%, 16%);
	--text_color_light: hsl(0, 10%, 38%);
	--text_color_lighter: hsl(0, 10%, 62%);
	--text_color_disabled: var(--text_color_lighter);
	--line_height: 1.2;
	--font_family: Arial, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu,
		Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
	--font_family_mono: 'Fira Mono', monospace;
	--font_size_xs: 0.989rem;
	--font_size_sm: 1.258rem;
	--font_size_md: 1.6rem;
	--font_size_lg: 2.035rem;
	--font_size_xl: 2.589rem;
	--font_size_xl2: 3.293rem;
	--font_size_xl3: 4.189rem;
	--font_size_xl4: 5.328rem;
	--font_size_xl5: 6.778rem;
	--font_size_xl6: 8.621rem;
	--font_size_xl7: 10.967rem;
	--font_size_xl8: 13.95rem;
	--font_size_xl9: 17.744rem;
	--font_weight_5: 900;
	--font_weight_4: 700;
	--font_weight_3: 500;
	--font_weight_2: 300;
	--font_weight_1: 100;
	--font_weight: var(--font_weight_3);
	--link_hue: var(--blue_hue);
	--link_saturation: 61%;
	--link_lightness: 35%;
	--link_color: hsl(var(--link_hue), var(--link_saturation), var(--link_lightness));
	--link_text_decoration: none;
	--link_text_decoration_hover: underline;
	--link_text_decoration_selected: underline;
	--link_color_active: var(--text_color);
	--link_cursor: default; /* because we have other visual affordances */
	/* TODO use scaling factor for these, probably,
	maybe hardcoding a few at 0.1, 0.2, 0.3/etc if it gets better results */
	--spacing_xs5: 0.1rem;
	--spacing_xs4: 0.2rem;
	--spacing_xs3: 0.3rem;
	--spacing_xs2: 0.4rem;
	--spacing_xs: 0.6rem;
	--spacing_sm: 0.8rem;
	--spacing_md: 1rem;
	--spacing_lg: 1.272rem;
	--spacing_xl: 1.618rem;
	--spacing_xl2: 2.058rem;
	--spacing_xl3: 2.618rem;
	--spacing_xl4: 3.33rem;
	--spacing_xl5: 4.236rem;
	--spacing_xl6: 5.388rem;
	--spacing_xl7: 6.854rem;
	--spacing_xl8: 8.719rem;
	--spacing_xl9: 11.09rem;
	--column_width: 800px; /* TODO might want to pad this a bit */
	--column_width_min: 320px; /* seems to be the obvious minimum supported width for smartphones */
	--nav_height: var(--spacing_xl2);
	--avatar_height: var(--spacing_xl3);
	--border_color_darker: hsla(
		var(--tint_hue),
		var(--tint_saturation),
		var(--tint_lightness_dark),
		var(--faded_1)
	);
	--border_color_dark: hsla(
		var(--tint_hue),
		var(--tint_saturation),
		var(--tint_lightness_dark),
		var(--faded_2)
	);
	--border_color: hsla(
		var(--tint_hue),
		var(--tint_saturation),
		var(--tint_lightness_dark),
		var(--faded_3)
	);
	/* TODO these don't use tint, but the above variants do */
	--border_color_light: rgba(0, 0, 0, var(--faded_4));
	--border_color_lighter: rgba(0, 0, 0, var(--faded_5));
	--border_radius_md: 25px;
	--border_radius: 5px;
	--border_width_6: 8px;
	--border_width_5: 6px;
	--border_width_4: 4px;
	--border_width_3: 3px;
	--border_width_2: 2px;
	--border_width_1: 1px;
	--border_style: solid;
	--border_style_1: solid;
	--border_style_2: double;
	--border_style_3: dotted;
	--border_style_4: dashed;
	--border_style_v: var(--border_style_1);
	--border_style_h: var(--border_style_1);
	--border_style_disabled: var(--border_style_4);
	--border: var(--border_width_1) var(--border_style) var(--tint);
	--border_alert: var(--border_width_3) var(--border_style_2)
		hsla(var(--red_hue), 100%, 50%, var(--faded_3));
	--border_help: var(--border_width_3) var(--border_style_2)
		hsla(var(--green_hue), 100%, 25%, var(--faded_3));
	--outline_width: 0;
	--outline_width_2: var(--border_width_5);
	--outline_width_3: var(--border_width_6);
	--outline_style: var(--border_style_2);
	--outline_style_2: var(--border_style_3);
	--outline_color: var(--interactive_color_hover);
	--button_border_width: var(--border_width_1);
	--button_border_style: solid;
	--button_border_v_style_disabled: solid;
	--button_border_h_style_disabled: dashed;
	--button_font_weight: var(--font_weight_4);
	--button_text_color: var(--text_color_light);
	--input_bg_color: var(--bg);
	--input_border_color: var(--border_color);
	--input_border_width: var(--border_width_1);
	--input_border_style: solid;
	--input_padding_v: var(--spacing_xs);
	--input_padding_h: var(--spacing_md);
	--input_width_min: 100px;
	--input_height: var(--spacing_xl3);
	--input_height_inner: calc(
		var(--input_height) - 2 * var(--input_border_width) - 2 * var(--input_padding_v)
	);
	/* these decrease by the golden ratio, rounded to the nearest pixel,
	and they're insensitive to font size (`px` not `rem`) */
	--icon_size_max: 512px;
	--icon_size_xl4: 512px;
	--icon_size_xl3: 316px;
	--icon_size_xl2: 196px;
	--icon_size_xl: 121px;
	--icon_size_lg: 75px;
	--icon_size_md: 46px;
	--icon_size_sm: 29px;
	--icon_size_xs: 18px;
	--left: 0px;
	--top: 0px;
}

*,
*::before,
*::after {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}

::selection {
	background: var(--active_color_bg_light);
}

html {
	height: 100%;
	width: 100%;
}

body {
	height: 100%;
	width: 100%;
	font-size: 1.6rem;
	font-family: var(--font_family);
	text-rendering: optimizeSpeed;
	background-color: var(--bg);
	line-height: var(--line_height);
}

/*

`#root` is the `svelte.config.js` `kit.target` element.
It contains `<main>` and overlays like the modal.

*/
#root {
	height: 100%;
	width: 100%;
	display: flex;
	flex-direction: column;
	align-items: center;
}

/*

`<main>` is the primary scrollable container --
ideally Felt wouldn't know this much about your layout,
but it's needed so we can get consistent modal behavior.
The `<main>` element is mounted inside `#root`,
and Felt's overlay containers are a sibling to `<main>`.

*/
main {
	height: 100%;
	width: 100%;
	overflow: auto;
}

a {
	color: var(--link_color);
	--font_weight: var(--font_weight_4);
	font-weight: var(--font_weight);
	text-decoration: var(--link_text_decoration);
	/* TODO not sure about this pattern, experimenting */
	--outline_style: var(--outline_style_2);
	outline: var(--outline_width) var(--outline_style) var(--outline_color);
}
a:hover {
	text-decoration: var(--link_text_decoration_hover);
	z-index: 3;
	--outline_width: var(--outline_width_2);
	--outline_color: var(--interactive_color_hover);
	cursor: var(--link_cursor);
}
a:focus {
	z-index: 2;
	--outline_width: var(--outline_width_2);
	--outline_color: var(--active_color);
	text-decoration: var(--link_text_decoration_hover);
}
a:active {
	--outline_width: var(--outline_width_3);
	--outline_color: var(--active_color_2);
}
a.selected {
	color: var(--link_color_active);
	--outline_color: var(--border_color);
	text-decoration: var(--link_text_decoration_selected);
}
a.selected:focus {
	--outline_color: var(--active_color);
}
a.selected:active {
	--outline_color: var(--border_color);
}

ul,
ol {
	display: flex;
	flex-direction: column;
	list-style: none;
}
li {
	display: flex;
}

h1 {
	font-size: var(--font_size_xl3);
	font-weight: var(--font_weight_1);
}
h2 {
	font-size: var(--font_size_xl2);
	font-weight: var(--font_weight_2);
}
h3 {
	font-size: var(--font_size_xl);
	font-weight: var(--font_weight_3);
}
h4 {
	font-size: var(--font_size_lg);
	font-weight: var(--font_weight_4);
}
h5 {
	font-size: var(--font_size_md);
	font-weight: var(--font_weight_5);
}
h6 {
	font-size: var(--font_size_sm);
	font-weight: var(--font_weight_5);
}

form {
	display: flex;
	flex-direction: column;
	align-items: center;
}
form input,
form textarea,
form select {
	width: auto;
}
form > *:last-child {
	margin-bottom: 0;
}
input,
textarea,
select {
	-webkit-appearance: none;
	appearance: none;
	font: inherit;
	font-size: var(--font_size_lg);
	padding: var(--input_padding_v) var(--input_padding_h);
	background: var(--input_bg_color);
	border-color: var(--input_border_color);
	border-style: var(--input_border_style);
	border-width: var(--input_border_width);
	border-radius: var(--border_radius);
	width: 100%;
	min-width: var(--input_width_min);
	min-height: var(--input_height);
	box-shadow: 0 0 0 2px var(--interactive_color), 0 0 0 3px var(--border_color);
	outline: none; /* should be enough visual change to make this unnecessary */
}
.buttonlike {
	position: relative;
	/* TODO more? */
}

input[type='checkbox'] {
	position: relative;
	left: var(--left);
	top: var(--top);
	width: var(--input_height);
	height: var(--input_height);
	max-width: var(--input_height);
	min-width: var(--input_height);
	box-shadow: -2px 2px 0 2px var(--interactive_color_disabled), -2px 2px 0 3px var(--border_color);
	--input_padding_v: 0;
	--input_padding_h: 0;
}
input[type='checkbox']::before {
	content: var(--content_empty, '');
	position: absolute;
	left: var(--left);
	top: var(--top);
	width: 100%;
	height: 100%;
	text-align: center;
	display: flex;
	align-items: center;
	justify-content: center;
	overflow: var(--overflow, visible);
	font-size: var(--font_size, var(--font_size_xl4));
	color: var(--input_border_color);
	line-height: 1;
}
input[type='checkbox']:checked::before {
	color: var(--active_color);
	/* TODO set as a var with `✓` or `•` with the source of truth as `bulletPoint` in `$lib/ui/icons` */
	content: var(--content, '✓');
}

input[type='range']::-webkit-slider-thumb {
	-webkit-appearance: none;
	height: var(--input_height_inner);
	width: var(--input_height_inner);
	border-radius: 50%;
	background-color: var(--input_border_color);
	border: 0;
	/* TODO hack to center the thumb vertically, breaks when input height var changes */
	margin-top: -0.9rem;
}

input[type='range']::-moz-range-thumb {
	appearance: none;
	height: var(--input_height_inner);
	width: var(--input_height_inner);
	border-radius: 50%;
	background-color: var(--input_border_color);
	border: 0;
}

input[type='range']::-webkit-slider-runnable-track {
	width: 100%;
	height: var(--input_border_width);
	background: var(--input_border_color);
}

input[type='range']::-moz-range-track {
	width: 100%;
	height: var(--input_border_width);
	background: var(--input_border_color);
}

hr {
	border: var(--border_width_3) var(--border_style_2) var(--border_color_light);
}

.buttonlike:hover,
input:hover,
textarea:hover,
select:hover {
	z-index: 3;
	box-shadow: 0 0 0 2px var(--interactive_color), 0 0 0 3px var(--border_color),
		0 0 3px 5px var(--shadow);
}

.buttonlike:focus,
.buttonlike:focus-within,
input:focus,
textarea:focus,
select:focus {
	z-index: 2;
	/* TODO which of these is best? both is weird */
	--border_color: var(--border_color_dark);
	--input_border_color: var(--border_color_dark);
	/* TODO vars? */
	box-shadow: 0 0 0 2px var(--interactive_color), 0 0 0 3px var(--border_color),
		0 0 5px 6px var(--shadow);
}

.buttonlike:active,
.buttonlike:active input,
.buttonlike:active textarea,
input:active,
textarea:active,
select:active {
	z-index: 3;
	--border_color: var(--border_color_dark);
	--input_border_color: var(--border_color_dark);
	/* TODO do we want these two vars at all? or should we use selectors+vars? */
	box-shadow: 0 0 0 3px var(--interactive_color), 0 0 0 4px var(--border_color),
		0 0 5px 7px var(--shadow);
}

/* TODO kind of a hacky override -- we don't want the .buttonlike to animate size, at least not with checkboxes  */
.buttonlike:active {
	box-shadow: 0 0 0 2px var(--interactive_color), 0 0 0 3px var(--border_color),
		0 0 5px 6px var(--shadow);
}

input:disabled,
textarea:disabled,
select:disabled,
.buttonlike.disabled {
	z-index: 1;
	--input_border_color: var(--border_color);
	opacity: 1; /* for some browsers */
	background: var(--interactive_color_disabled);
	color: var(--text_color_disabled);
	border-left-style: var(--button_border_h_style_disabled);
	border-right-style: var(--button_border_h_style_disabled);
	border-top-style: var(--button_border_v_style_disabled);
	border-bottom-style: var(--button_border_v_style_disabled);
}
input:disabled:focus,
textarea:disabled:focus,
select:disabled:focus,
.buttonlike.disabled:focus {
	z-index: 2;
	--input_border_color: var(--error_color);
	--border_color: var(--error_color);
}
input:disabled:hover,
textarea:disabled:hover,
select:disabled:hover,
.buttonlike.disabled:hover {
	z-index: 3;
	--input_border_color: var(--error_color);
	--border_color: var(--error_color);
}

button {
	-webkit-appearance: none;
	appearance: none;
	position: relative;
	left: var(--left);
	top: var(--top);
	display: flex;
	align-items: center;
	justify-content: center;
	font: inherit;
	/* TODO should `font-size` inherit? */
	font-size: var(--font_size_lg);
	font-weight: var(--button_font_weight);
	min-height: var(--input_height);
	padding: var(--spacing_xs) var(--spacing_md);
	background: var(--interactive_color);
	border-width: var(--button_border_width);
	border-color: var(--border_color);
	border-style: var(--border_style_v) var(--border_style_h);
	border-radius: var(--border_radius);
	color: var(--button_text_color);
	outline: none; /* should be enough visual change to make this unnecessary */
	box-shadow: -2px 2px 0 2px var(--interactive_color_dark), -2px 2px 0 3px var(--border_color);
}
button::after,
input[type='checkbox']::after {
	/* this is an interactive surface, lets us reposition button content on hover without moving the hitbox */
	content: '';
	position: absolute;
	left: calc(-1 * var(--left));
	top: calc(-1 * var(--top));
	width: 100%;
	height: 100%;
}
/* TODO should probably move differently when disabled:
	--left: 1px;
	--top: -1px;
	but then we need to offset the box shadows by --left and --top
*/
button:disabled,
input[type='checkbox']:disabled {
	z-index: 1;
	opacity: 1; /* for some browsers */
	background: var(--interactive_color_disabled);
	color: var(--text_color_disabled);
	--border_style_h: var(--border_style_disabled);
}
button.selected {
	z-index: 2;
}
button:hover,
button:focus,
.buttonlike:hover input[type='checkbox'],
.buttonlike:focus input[type='checkbox'],
input[type='checkbox']:hover,
input[type='checkbox']:focus {
	--border_color: var(--border_color_dark);
	/* TODO delete this */
	--input_border_color: var(--border_color);
	z-index: 3;
	background: var(--interactive_color_hover);
	box-shadow: -2px 2px 0 2px var(--interactive_color), -2px 2px 0 3px var(--border_color),
		-2px 2px 5px 5px var(--shadow);
}
button:active,
.buttonlike:active input[type='checkbox'],
input[type='checkbox']:active {
	--left: -2px;
	--top: 2px;
	--border_color: var(--border_color_darker);
	z-index: 4;
	background: var(--interactive_color_active);
	box-shadow: -1px 1px 0 1px var(--interactive_color_active_dark),
		-1px 1px 0 2px var(--border_color), 0 0 5px 5px var(--shadow);
}
/* the `::after` pseudo element is our hitbox, and we keep it in place */
button::after:active,
.buttonlike:active input[type='checkbox']::after,
input[type='checkbox']:active::after {
	--left: 2px;
	--top: -2px;
}
button.inline {
	display: inline-block;
	margin-left: var(--spacing_lg);
}
button.selected {
	--border_color: var(--active_color);
	--border_style_h: var(--border_style_1);
	color: var(--active_color);
}
input[type='checkbox']:checked,
.buttonlike:hover input[type='checkbox']:checked,
.buttonlike:focus input[type='checkbox']:checked {
	/* TODO probably refactor away `input_border_color` */
	--input_border_color: var(--active_color);
	--border_color: var(--active_color);
}
button:disabled:hover,
.buttonlike:hover input[type='checkbox']:disabled,
input[type='checkbox']:hover:disabled,
button:disabled:focus,
.buttonlike:focus input[type='checkbox']:disabled,
input[type='checkbox']:focus:disabled {
	--border_color: var(--error_color);
	--color: var(--error_color);
}

label {
	display: flex;
	align-items: center;
	justify-content: center;
}

nav {
	min-height: var(--nav_height);
	width: 100%;
	display: flex;
	justify-content: center;
	align-items: stretch;
	flex-wrap: wrap;
}
nav button {
	flex: 1;
}

.column {
	width: 100%;
	max-width: var(--column_width);
	min-width: var(--column_width_min);
}

/* TODO does this belong in `Markup.svelte` ? */
blockquote {
	padding: var(--spacing_xs) 0 var(--spacing_xs) var(--spacing_xl);
	margin-bottom: var(--spacing_md);
	border-left: var(--border_width_3) solid var(--tint);
	color: var(--text_color_light);
}

code {
	font-family: var(--font_family_mono);
	color: var(--text_color_light);
	background-color: var(--tint_highlight);
	padding: 0 var(--spacing_xs);
}

pre {
	font-family: var(--font_family_mono);
	color: var(--text_color_light);
}

small {
	font-size: var(--font_size_sm);
}

img {
	display: block;
	max-width: 100%;
}

.paused {
	/* eww important */
	animation-play-state: paused !important;
}
